const fs = require('fs');
const { artifacts, assert } = require("hardhat");

// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require("contracts\\verifier.sol:Verifier");
// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps

    
// Test verification with incorrect proof
describe("Verifier contract", function () {
    let accounts;
    let verifier;
  
    before(async function () {
      accounts = await web3.eth.getAccounts();
      verifier = await Verifier.new();
    });
  
    it("Verification with correct proof", async function () {
      
      // read the proof
      const proof = await JSON.parse(fs.readFileSync("./test/proof.json")) ;
      
      // verify the proof
      const rtnVal = await verifier.verifyTx(proof.proof.a, proof.proof.b, proof.proof.c, proof.inputs);
      console.log("Verification: " + rtnVal);
      assert.equal(rtnVal, true);
     
    });

    
    it("Verification with fake proof", async function () {
      
        // read the proof
        const proof = await JSON.parse(fs.readFileSync("./test/fakeProof.json")) ;
        
        let rtnVal = true;
        // verify the proof
        try {
            const rtnVal = await verifier.verifyTx(proof.proof.a, proof.proof.b, proof.proof.c, proof.inputs);
            console.log("Verification: " + rtnVal);
            assert.equal(rtnVal, false);
        }catch (e)  {
            console.log("Exception thrown");
            rtnVal = false;
            assert.equal(rtnVal, false);
        }
      });
      
  });